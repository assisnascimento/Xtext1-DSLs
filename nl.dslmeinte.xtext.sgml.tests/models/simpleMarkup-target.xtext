
// generated by DTD2Xtext.xpt
grammar nl.dslmeinte.xtext.sgml.dtd.test.SimpleMarkup with nl.dslmeinte.xtext.sgml.base.Base hidden()

generate simplemarkup "http://dslmeinte.nl/Xtext/sgml/dtd/tests/simpleMarkup"


// override from Base to include root (of right type):
SgmlDocument hidden(WHITESPACE, HEADER_COMMENTS):
	OPEN_TAG_SYMBOL SISGML_KEYWORD (PUBLIC_KEYWORD | SYSTEM_KEYWORD) header1=QUOTED_STRING header2=QUOTED_STRING?
		(OPEN_BRACKET_SYMBOL entities+=Entity* CLOSE_BRACKET_SYMBOL)? CLOSE_TAG_SYMBOL
		root=Content
	;



Content hidden(SGML_COMMENTS):
	{Content}
	
	OPEN_TAG_SYMBOL 'Content' 
	
CLOSE_TAG_SYMBOL

	( (contents+=Reference)? (contents+=Section)+ )
	
	OPEN_TAG_SYMBOL SLASH_SYMBOL 'Content' CLOSE_TAG_SYMBOL

	;

Content_tagOpen hidden():
	OPEN_TAG_SYMBOL 'Content' CLOSE_TAG_SYMBOL
	;

Reference hidden(SGML_COMMENTS):
	reference_tagOpen=Reference_tagOpen
	reference_tagClose=Reference_tagClose?
	;

Reference_tagOpen hidden(): OPEN_TAG_SYMBOL 'Reference' WHITESPACE attributes=Reference_attributes CLOSE_TAG_SYMBOL WHITESPACE?;
Reference_attributes hidden(WHITESPACE): styleName=QUOTED_STRING & condition=QUOTED_STRING?;
Reference_tagClose hidden(): OPEN_TAG_SYMBOL SLASH_SYMBOL 'Reference' CLOSE_TAG_SYMBOL;

Section hidden(SGML_COMMENTS):
	{Section}
	
	OPEN_TAG_SYMBOL 'Section' 
	WHITESPACE styleName=QUOTED_STRING?
CLOSE_TAG_SYMBOL

	(contents+=Par)*
	
	OPEN_TAG_SYMBOL SLASH_SYMBOL 'Section' CLOSE_TAG_SYMBOL

	;

Par hidden(SGML_COMMENTS):
	{Par}
	par_tagOpen=Par_tagOpen
	(( contents+=em | contents+=bf | contents+=_PCDATAContents* ))*
	par_tagClose=Par_tagClose
	;

Par_tagOpen hidden(): OPEN_TAG_SYMBOL 'Par' WHITESPACE attributes=Par_attributes CLOSE_TAG_SYMBOL WHITESPACE?;
Par_attributes hidden(WHITESPACE): {Par_attributes} styleName=QUOTED_STRING?;
Par_tagClose hidden(): OPEN_TAG_SYMBOL SLASH_SYMBOL 'Par' CLOSE_TAG_SYMBOL;

em hidden(SGML_COMMENTS):
	{em}
	
	OPEN_TAG_SYMBOL 'em' 
	
CLOSE_TAG_SYMBOL

	(( contents+=bf | contents+=_PCDATAContents* ))*
	
	OPEN_TAG_SYMBOL SLASH_SYMBOL 'em' CLOSE_TAG_SYMBOL

	;

bf hidden(SGML_COMMENTS):
	{bf}
	
	OPEN_TAG_SYMBOL 'bf' 
	
CLOSE_TAG_SYMBOL

	(( contents+=em | contents+=_PCDATAContents* ))*
	
	OPEN_TAG_SYMBOL SLASH_SYMBOL 'bf' CLOSE_TAG_SYMBOL

	;


