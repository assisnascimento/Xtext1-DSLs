/*
* generated by Xtext
*/
package nl.dslmeinte.xtext.examples.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import nl.dslmeinte.xtext.examples.services.WsdlLanguageGrammarAccess;

public class WsdlLanguageParser extends AbstractContentAssistParser {
	
	@Inject
	private WsdlLanguageGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected nl.dslmeinte.xtext.examples.ui.contentassist.antlr.internal.InternalWsdlLanguageParser createParser() {
		nl.dslmeinte.xtext.examples.ui.contentassist.antlr.internal.InternalWsdlLanguageParser result = new nl.dslmeinte.xtext.examples.ui.contentassist.antlr.internal.InternalWsdlLanguageParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getOperationAccess().getAlternatives(), "rule__Operation__Alternatives");
					put(grammarAccess.getTransportAccess().getAlternatives(), "rule__Transport__Alternatives");
					put(grammarAccess.getSoapTypeAccess().getAlternatives(), "rule__SoapType__Alternatives");
					put(grammarAccess.getHttpTypeAccess().getAlternatives(), "rule__HttpType__Alternatives");
					put(grammarAccess.getDefinitionsAccess().getGroup(), "rule__Definitions__Group__0");
					put(grammarAccess.getDefinitionsAccess().getGroup_5(), "rule__Definitions__Group_5__0");
					put(grammarAccess.getDefinitionsAccess().getGroup_6(), "rule__Definitions__Group_6__0");
					put(grammarAccess.getDefinitionsAccess().getGroup_7(), "rule__Definitions__Group_7__0");
					put(grammarAccess.getDefinitionsAccess().getGroup_8(), "rule__Definitions__Group_8__0");
					put(grammarAccess.getXsdImportAccess().getGroup(), "rule__XsdImport__Group__0");
					put(grammarAccess.getMessageAccess().getGroup(), "rule__Message__Group__0");
					put(grammarAccess.getPartAccess().getGroup(), "rule__Part__Group__0");
					put(grammarAccess.getPortTypeAccess().getGroup(), "rule__PortType__Group__0");
					put(grammarAccess.getOneWayOperationAccess().getGroup(), "rule__OneWayOperation__Group__0");
					put(grammarAccess.getRequestResponseOperationAccess().getGroup(), "rule__RequestResponseOperation__Group__0");
					put(grammarAccess.getSolicitResponseOperationAccess().getGroup(), "rule__SolicitResponseOperation__Group__0");
					put(grammarAccess.getNotificationOperationAccess().getGroup(), "rule__NotificationOperation__Group__0");
					put(grammarAccess.getBindingAccess().getGroup(), "rule__Binding__Group__0");
					put(grammarAccess.getSoapTransportAccess().getGroup(), "rule__SoapTransport__Group__0");
					put(grammarAccess.getHttpTransportAccess().getGroup(), "rule__HttpTransport__Group__0");
					put(grammarAccess.getServiceAccess().getGroup(), "rule__Service__Group__0");
					put(grammarAccess.getServiceAccess().getGroup_2(), "rule__Service__Group_2__0");
					put(grammarAccess.getPortAccess().getGroup(), "rule__Port__Group__0");
					put(grammarAccess.getDefinitionsAccess().getNameAssignment_1(), "rule__Definitions__NameAssignment_1");
					put(grammarAccess.getDefinitionsAccess().getNsUriAssignment_3(), "rule__Definitions__NsUriAssignment_3");
					put(grammarAccess.getDefinitionsAccess().getXsdImportAssignment_4(), "rule__Definitions__XsdImportAssignment_4");
					put(grammarAccess.getDefinitionsAccess().getMessagesAssignment_5_1(), "rule__Definitions__MessagesAssignment_5_1");
					put(grammarAccess.getDefinitionsAccess().getPortTypesAssignment_6_1(), "rule__Definitions__PortTypesAssignment_6_1");
					put(grammarAccess.getDefinitionsAccess().getBindingsAssignment_7_1(), "rule__Definitions__BindingsAssignment_7_1");
					put(grammarAccess.getDefinitionsAccess().getServicesAssignment_8_1(), "rule__Definitions__ServicesAssignment_8_1");
					put(grammarAccess.getXsdImportAccess().getImportURIAssignment_1(), "rule__XsdImport__ImportURIAssignment_1");
					put(grammarAccess.getXsdImportAccess().getNsPrefixAssignment_3(), "rule__XsdImport__NsPrefixAssignment_3");
					put(grammarAccess.getMessageAccess().getNameAssignment_0(), "rule__Message__NameAssignment_0");
					put(grammarAccess.getMessageAccess().getPartsAssignment_2(), "rule__Message__PartsAssignment_2");
					put(grammarAccess.getPartAccess().getNameAssignment_0(), "rule__Part__NameAssignment_0");
					put(grammarAccess.getPartAccess().getDefAssignment_2(), "rule__Part__DefAssignment_2");
					put(grammarAccess.getPortTypeAccess().getNameAssignment_0(), "rule__PortType__NameAssignment_0");
					put(grammarAccess.getPortTypeAccess().getOperationsAssignment_2(), "rule__PortType__OperationsAssignment_2");
					put(grammarAccess.getOneWayOperationAccess().getNameAssignment_1(), "rule__OneWayOperation__NameAssignment_1");
					put(grammarAccess.getOneWayOperationAccess().getInputAssignment_3(), "rule__OneWayOperation__InputAssignment_3");
					put(grammarAccess.getRequestResponseOperationAccess().getNameAssignment_1(), "rule__RequestResponseOperation__NameAssignment_1");
					put(grammarAccess.getRequestResponseOperationAccess().getInputAssignment_3(), "rule__RequestResponseOperation__InputAssignment_3");
					put(grammarAccess.getRequestResponseOperationAccess().getOutputAssignment_5(), "rule__RequestResponseOperation__OutputAssignment_5");
					put(grammarAccess.getSolicitResponseOperationAccess().getNameAssignment_1(), "rule__SolicitResponseOperation__NameAssignment_1");
					put(grammarAccess.getSolicitResponseOperationAccess().getInputAssignment_3(), "rule__SolicitResponseOperation__InputAssignment_3");
					put(grammarAccess.getSolicitResponseOperationAccess().getOutputAssignment_5(), "rule__SolicitResponseOperation__OutputAssignment_5");
					put(grammarAccess.getNotificationOperationAccess().getNameAssignment_1(), "rule__NotificationOperation__NameAssignment_1");
					put(grammarAccess.getNotificationOperationAccess().getOutputAssignment_4(), "rule__NotificationOperation__OutputAssignment_4");
					put(grammarAccess.getBindingAccess().getNameAssignment_0(), "rule__Binding__NameAssignment_0");
					put(grammarAccess.getBindingAccess().getTypeAssignment_2(), "rule__Binding__TypeAssignment_2");
					put(grammarAccess.getBindingAccess().getTransportAssignment_4(), "rule__Binding__TransportAssignment_4");
					put(grammarAccess.getSoapTransportAccess().getTypeAssignment_2(), "rule__SoapTransport__TypeAssignment_2");
					put(grammarAccess.getHttpTransportAccess().getTypeAssignment_2(), "rule__HttpTransport__TypeAssignment_2");
					put(grammarAccess.getServiceAccess().getNameAssignment_0(), "rule__Service__NameAssignment_0");
					put(grammarAccess.getServiceAccess().getDocumentationAssignment_2_1(), "rule__Service__DocumentationAssignment_2_1");
					put(grammarAccess.getServiceAccess().getPortsAssignment_3(), "rule__Service__PortsAssignment_3");
					put(grammarAccess.getPortAccess().getNameAssignment_1(), "rule__Port__NameAssignment_1");
					put(grammarAccess.getPortAccess().getBindingAssignment_3(), "rule__Port__BindingAssignment_3");
					put(grammarAccess.getPortAccess().getLocationAssignment_5(), "rule__Port__LocationAssignment_5");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			nl.dslmeinte.xtext.examples.ui.contentassist.antlr.internal.InternalWsdlLanguageParser typedParser = (nl.dslmeinte.xtext.examples.ui.contentassist.antlr.internal.InternalWsdlLanguageParser) parser;
			typedParser.entryRuleDefinitions();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public WsdlLanguageGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(WsdlLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
