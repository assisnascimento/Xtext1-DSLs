«IMPORT wsdlLanguage»
«IMPORT xsdLanguage»

«EXTENSION nl::dslmeinte::xtext::examples::generation::WsdlExtensions»
«EXTENSION org::eclipse::xtend::util::stdlib::io»


«DEFINE main FOR Definitions-»
«FILE name + ".wsdl"-»
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<wsdl:definitions
	name="«name»"
	xmlns:tns="«nsUri»"
	targetNamespace="«nsUri»"
	xmlns:«xsdImport.nsPrefix»="«xsdImport.resolve().nsURI»"
	xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
«IF hasSoapBindings()»	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"«ENDIF»
«IF hasHttpBindings()»	xmlns:http="http://schemas.xmlsoap.org/wsdl/http/"«ENDIF»
>

  <wsdl:import namespace="«xsdImport.resolve().nsURI»" location="«xsdImport.resolve().name».xsd" />«REM»TODO  this shouldn't be a relative URI«ENDREM»

«EXPAND message FOREACH messages»
«EXPAND portType FOREACH portTypes»
«EXPAND binding(nsUri) FOREACH bindings»
«EXPAND service FOREACH services»

</wsdl:definitions>
«ENDFILE-»
«ENDDEFINE»

«REM»TODO  trigger generation of XSD from 'main' (or 'all') as well«ENDREM»


«DEFINE message FOR Message -»
  <wsdl:message name="«name»">
    «FOREACH parts AS this -»
    <wsdl:part name="«name»" «EXPAND defRef(xsdImport().nsPrefix) FOR def» />
    «ENDFOREACH -»
  </wsdl:message>
«ENDDEFINE»
«REM»
Slight problem: Xpand (editor) apparently can't register the XSD language meta model
because of/after the use of import "classpath:/..." in the grammar file...
«ENDREM»

«DEFINE defRef(String prefix) FOR TopLevelDefinition»
«( "undefined 'defRef' block for type " + metaType.name ).error()»
«ENDDEFINE»

«DEFINE defRef(String prefix) FOR TopLevelElement»element="«prefix»:«name»"«ENDDEFINE»
«DEFINE defRef(String prefix) FOR TopLevelType»type="«prefix»:«name»"«ENDDEFINE»

«DEFINE portType FOR PortType -»
  <wsdl:portType name="«name»">
  «FOREACH operations AS this -»
    <wsdl:operation name="«name»">
«EXPAND operationContents -»
    </wsdl:operation>
  «ENDFOREACH -»
  </wsdl:portType>
«ENDDEFINE»


«DEFINE binding(String nsUri) FOR Binding»
  <wsdl:binding name="«name»" type="tns:«type.name»">
  «EXPAND binding FOR transport -»
  «FOREACH type.operations AS op -»
  	<wsdl:operation name="«op.name»">
  	«EXPAND operationInterface(nsUri, op) FOR transport -»
  	</wsdl:operation>
  «ENDFOREACH -»
  </wsdl:binding>
«ENDDEFINE»

«DEFINE binding FOR Transport»
«( "undefined 'binding' block for type " + metaType.name ).error()»
«ENDDEFINE»

«DEFINE binding FOR SoapTransport -»
    <soap:binding style="«type»" transport="http://schemas.xmlsoap.org/soap/http"/>
«ENDDEFINE»

«DEFINE binding FOR HttpTransport -»
    <http:binding verb="«typeName().toUpperCase()»" />
«ENDDEFINE»

«REM»(type switch on transport)«ENDREM»

«DEFINE operationInterface(String nsUri, Operation operation) FOR Transport»
«( "undefined 'operationInterface' block for type " + metaType.name ).error()»
«ENDDEFINE»

«DEFINE operationInterface(String nsUri, Operation operation) FOR SoapTransport -»
  		<soap:operation soapAction="«nsUri»/«operation.name»" />
  		<wsdl:input>
  			<soap:body use="literal" />
  		</wsdl:input>
  		<wsdl:output>
  			<soap:body use="literal" />
  		</wsdl:output>
«ENDDEFINE»

«DEFINE operationInterface(String nsUri, Operation operation) FOR HttpTransport -»
  		<http:operation location="«operation.name»" />
  		<wsdl:input>
  			<mime:content type="application/x-www-form-urlencoded"/>
  		</wsdl:input>
  		<wsdl:output>
  			<mime:content type="application/octet-stream"/>
  		</wsdl:output>
«ENDDEFINE»


«DEFINE service FOR Service»
  <wsdl:service name="«name»">
  «IF documentation.trim().length > 0 -»
    <wsdl:documentation>«documentation»</wsdl:documentation>
  «ENDIF -»
  «FOREACH ports AS this -»
    <wsdl:port name="«name»" binding="tns:«binding.name»">
      <«binding.transport.name()»:address location="«location»"/>
    </wsdl:port>
  «ENDFOREACH -»
  </wsdl:service>
«ENDDEFINE»


«DEFINE operationContents FOR Operation»
«( "undefined 'operationContents' block for type " + metaType.name ).error()»
«ENDDEFINE»

«DEFINE operationContents FOR OneWayOperation -»
      <wsdl:input message="tns:«input.name»" />
«ENDDEFINE»

«DEFINE operationContents FOR RequestResponseOperation -»
      <wsdl:input message="tns:«input.name»" />
      <wsdl:output message="tns:«output.name»" />
«ENDDEFINE»

«DEFINE operationContents FOR SolicitResponseOperation -»
      <wsdl:output message="tns:«output.name»" />
      <wsdl:input message="tns:«input.name»" />
«ENDDEFINE»

«DEFINE operationContents FOR NotificationOperation -»
      <wsdl:output message="tns:«output.name»" />
«ENDDEFINE»

