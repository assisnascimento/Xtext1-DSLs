/*
* generated by Xtext
*/
grammar InternalXsdLanguage;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package nl.dslmeinte.xtext.examples.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package nl.dslmeinte.xtext.examples.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import nl.dslmeinte.xtext.examples.services.XsdLanguageGrammarAccess;

}

@parser::members {
 
 	private XsdLanguageGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(XsdLanguageGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSchema
entryRuleSchema 
:
{ before(grammarAccess.getSchemaRule()); }
	 ruleSchema
{ after(grammarAccess.getSchemaRule()); } 
	 EOF 
;

// Rule Schema
ruleSchema
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSchemaAccess().getGroup()); }
(rule__Schema__Group__0)
{ after(grammarAccess.getSchemaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTopLevelDefinition
entryRuleTopLevelDefinition 
:
{ before(grammarAccess.getTopLevelDefinitionRule()); }
	 ruleTopLevelDefinition
{ after(grammarAccess.getTopLevelDefinitionRule()); } 
	 EOF 
;

// Rule TopLevelDefinition
ruleTopLevelDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTopLevelDefinitionAccess().getAlternatives()); }
(rule__TopLevelDefinition__Alternatives)
{ after(grammarAccess.getTopLevelDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTopLevelType
entryRuleTopLevelType 
:
{ before(grammarAccess.getTopLevelTypeRule()); }
	 ruleTopLevelType
{ after(grammarAccess.getTopLevelTypeRule()); } 
	 EOF 
;

// Rule TopLevelType
ruleTopLevelType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTopLevelTypeAccess().getAlternatives()); }
(rule__TopLevelType__Alternatives)
{ after(grammarAccess.getTopLevelTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTopLevelElement
entryRuleTopLevelElement 
:
{ before(grammarAccess.getTopLevelElementRule()); }
	 ruleTopLevelElement
{ after(grammarAccess.getTopLevelElementRule()); } 
	 EOF 
;

// Rule TopLevelElement
ruleTopLevelElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTopLevelElementAccess().getGroup()); }
(rule__TopLevelElement__Group__0)
{ after(grammarAccess.getTopLevelElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTopLevelSimpleType
entryRuleTopLevelSimpleType 
:
{ before(grammarAccess.getTopLevelSimpleTypeRule()); }
	 ruleTopLevelSimpleType
{ after(grammarAccess.getTopLevelSimpleTypeRule()); } 
	 EOF 
;

// Rule TopLevelSimpleType
ruleTopLevelSimpleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTopLevelSimpleTypeAccess().getGroup()); }
(rule__TopLevelSimpleType__Group__0)
{ after(grammarAccess.getTopLevelSimpleTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRestriction
entryRuleRestriction 
:
{ before(grammarAccess.getRestrictionRule()); }
	 ruleRestriction
{ after(grammarAccess.getRestrictionRule()); } 
	 EOF 
;

// Rule Restriction
ruleRestriction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRestrictionAccess().getGroup()); }
(rule__Restriction__Group__0)
{ after(grammarAccess.getRestrictionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFacet
entryRuleFacet 
:
{ before(grammarAccess.getFacetRule()); }
	 ruleFacet
{ after(grammarAccess.getFacetRule()); } 
	 EOF 
;

// Rule Facet
ruleFacet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFacetAccess().getAlternatives()); }
(rule__Facet__Alternatives)
{ after(grammarAccess.getFacetAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumerationFacet
entryRuleEnumerationFacet 
:
{ before(grammarAccess.getEnumerationFacetRule()); }
	 ruleEnumerationFacet
{ after(grammarAccess.getEnumerationFacetRule()); } 
	 EOF 
;

// Rule EnumerationFacet
ruleEnumerationFacet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumerationFacetAccess().getGroup()); }
(rule__EnumerationFacet__Group__0)
{ after(grammarAccess.getEnumerationFacetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumerationLiteral
entryRuleEnumerationLiteral 
:
{ before(grammarAccess.getEnumerationLiteralRule()); }
	 ruleEnumerationLiteral
{ after(grammarAccess.getEnumerationLiteralRule()); } 
	 EOF 
;

// Rule EnumerationLiteral
ruleEnumerationLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumerationLiteralAccess().getGroup()); }
(rule__EnumerationLiteral__Group__0)
{ after(grammarAccess.getEnumerationLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMaxLengthFacet
entryRuleMaxLengthFacet 
:
{ before(grammarAccess.getMaxLengthFacetRule()); }
	 ruleMaxLengthFacet
{ after(grammarAccess.getMaxLengthFacetRule()); } 
	 EOF 
;

// Rule MaxLengthFacet
ruleMaxLengthFacet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMaxLengthFacetAccess().getGroup()); }
(rule__MaxLengthFacet__Group__0)
{ after(grammarAccess.getMaxLengthFacetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePatternFacet
entryRulePatternFacet 
:
{ before(grammarAccess.getPatternFacetRule()); }
	 rulePatternFacet
{ after(grammarAccess.getPatternFacetRule()); } 
	 EOF 
;

// Rule PatternFacet
rulePatternFacet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPatternFacetAccess().getGroup()); }
(rule__PatternFacet__Group__0)
{ after(grammarAccess.getPatternFacetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRangeFacet
entryRuleRangeFacet 
:
{ before(grammarAccess.getRangeFacetRule()); }
	 ruleRangeFacet
{ after(grammarAccess.getRangeFacetRule()); } 
	 EOF 
;

// Rule RangeFacet
ruleRangeFacet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRangeFacetAccess().getGroup()); }
(rule__RangeFacet__Group__0)
{ after(grammarAccess.getRangeFacetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLengthFacet
entryRuleLengthFacet 
:
{ before(grammarAccess.getLengthFacetRule()); }
	 ruleLengthFacet
{ after(grammarAccess.getLengthFacetRule()); } 
	 EOF 
;

// Rule LengthFacet
ruleLengthFacet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLengthFacetAccess().getGroup()); }
(rule__LengthFacet__Group__0)
{ after(grammarAccess.getLengthFacetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDocumentation
entryRuleDocumentation 
:
{ before(grammarAccess.getDocumentationRule()); }
	 ruleDocumentation
{ after(grammarAccess.getDocumentationRule()); } 
	 EOF 
;

// Rule Documentation
ruleDocumentation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDocumentationAccess().getGroup()); }
(rule__Documentation__Group__0)
{ after(grammarAccess.getDocumentationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTopLevelComplexType
entryRuleTopLevelComplexType 
:
{ before(grammarAccess.getTopLevelComplexTypeRule()); }
	 ruleTopLevelComplexType
{ after(grammarAccess.getTopLevelComplexTypeRule()); } 
	 EOF 
;

// Rule TopLevelComplexType
ruleTopLevelComplexType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTopLevelComplexTypeAccess().getGroup()); }
(rule__TopLevelComplexType__Group__0)
{ after(grammarAccess.getTopLevelComplexTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getAlternatives()); }
(rule__Property__Alternatives)
{ after(grammarAccess.getPropertyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElement
entryRuleElement 
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementAccess().getGroup()); }
(rule__Element__Group__0)
{ after(grammarAccess.getElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicity
entryRuleMultiplicity 
:
{ before(grammarAccess.getMultiplicityRule()); }
	 ruleMultiplicity
{ after(grammarAccess.getMultiplicityRule()); } 
	 EOF 
;

// Rule Multiplicity
ruleMultiplicity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicityAccess().getGroup()); }
(rule__Multiplicity__Group__0)
{ after(grammarAccess.getMultiplicityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedTypeReference
entryRuleNamedTypeReference 
:
{ before(grammarAccess.getNamedTypeReferenceRule()); }
	 ruleNamedTypeReference
{ after(grammarAccess.getNamedTypeReferenceRule()); } 
	 EOF 
;

// Rule NamedTypeReference
ruleNamedTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedTypeReferenceAccess().getAlternatives()); }
(rule__NamedTypeReference__Alternatives)
{ after(grammarAccess.getNamedTypeReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNonComplexTypeReference
entryRuleNonComplexTypeReference 
:
{ before(grammarAccess.getNonComplexTypeReferenceRule()); }
	 ruleNonComplexTypeReference
{ after(grammarAccess.getNonComplexTypeReferenceRule()); } 
	 EOF 
;

// Rule NonComplexTypeReference
ruleNonComplexTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNonComplexTypeReferenceAccess().getAlternatives()); }
(rule__NonComplexTypeReference__Alternatives)
{ after(grammarAccess.getNonComplexTypeReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuiltinTypeReference
entryRuleBuiltinTypeReference 
:
{ before(grammarAccess.getBuiltinTypeReferenceRule()); }
	 ruleBuiltinTypeReference
{ after(grammarAccess.getBuiltinTypeReferenceRule()); } 
	 EOF 
;

// Rule BuiltinTypeReference
ruleBuiltinTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBuiltinTypeReferenceAccess().getBuiltinAssignment()); }
(rule__BuiltinTypeReference__BuiltinAssignment)
{ after(grammarAccess.getBuiltinTypeReferenceAccess().getBuiltinAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTopLevelTypeReference
entryRuleTopLevelTypeReference 
:
{ before(grammarAccess.getTopLevelTypeReferenceRule()); }
	 ruleTopLevelTypeReference
{ after(grammarAccess.getTopLevelTypeReferenceRule()); } 
	 EOF 
;

// Rule TopLevelTypeReference
ruleTopLevelTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTopLevelTypeReferenceAccess().getAlternatives()); }
(rule__TopLevelTypeReference__Alternatives)
{ after(grammarAccess.getTopLevelTypeReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTopLevelComplexTypeReference
entryRuleTopLevelComplexTypeReference 
:
{ before(grammarAccess.getTopLevelComplexTypeReferenceRule()); }
	 ruleTopLevelComplexTypeReference
{ after(grammarAccess.getTopLevelComplexTypeReferenceRule()); } 
	 EOF 
;

// Rule TopLevelComplexTypeReference
ruleTopLevelComplexTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTopLevelComplexTypeReferenceAccess().getAlternatives()); }
(rule__TopLevelComplexTypeReference__Alternatives)
{ after(grammarAccess.getTopLevelComplexTypeReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTopLevelSimpleTypeReference
entryRuleTopLevelSimpleTypeReference 
:
{ before(grammarAccess.getTopLevelSimpleTypeReferenceRule()); }
	 ruleTopLevelSimpleTypeReference
{ after(grammarAccess.getTopLevelSimpleTypeReferenceRule()); } 
	 EOF 
;

// Rule TopLevelSimpleTypeReference
ruleTopLevelSimpleTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTopLevelSimpleTypeReferenceAccess().getAlternatives()); }
(rule__TopLevelSimpleTypeReference__Alternatives)
{ after(grammarAccess.getTopLevelSimpleTypeReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDirectTopLevelTypeReference
entryRuleDirectTopLevelTypeReference 
:
{ before(grammarAccess.getDirectTopLevelTypeReferenceRule()); }
	 ruleDirectTopLevelTypeReference
{ after(grammarAccess.getDirectTopLevelTypeReferenceRule()); } 
	 EOF 
;

// Rule DirectTopLevelTypeReference
ruleDirectTopLevelTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDirectTopLevelTypeReferenceAccess().getRefAssignment()); }
(rule__DirectTopLevelTypeReference__RefAssignment)
{ after(grammarAccess.getDirectTopLevelTypeReferenceAccess().getRefAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDirectTopLevelSimpleTypeReference
entryRuleDirectTopLevelSimpleTypeReference 
:
{ before(grammarAccess.getDirectTopLevelSimpleTypeReferenceRule()); }
	 ruleDirectTopLevelSimpleTypeReference
{ after(grammarAccess.getDirectTopLevelSimpleTypeReferenceRule()); } 
	 EOF 
;

// Rule DirectTopLevelSimpleTypeReference
ruleDirectTopLevelSimpleTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDirectTopLevelSimpleTypeReferenceAccess().getRefAssignment()); }
(rule__DirectTopLevelSimpleTypeReference__RefAssignment)
{ after(grammarAccess.getDirectTopLevelSimpleTypeReferenceAccess().getRefAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDirectTopLevelComplexTypeReference
entryRuleDirectTopLevelComplexTypeReference 
:
{ before(grammarAccess.getDirectTopLevelComplexTypeReferenceRule()); }
	 ruleDirectTopLevelComplexTypeReference
{ after(grammarAccess.getDirectTopLevelComplexTypeReferenceRule()); } 
	 EOF 
;

// Rule DirectTopLevelComplexTypeReference
ruleDirectTopLevelComplexTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDirectTopLevelComplexTypeReferenceAccess().getRefAssignment()); }
(rule__DirectTopLevelComplexTypeReference__RefAssignment)
{ after(grammarAccess.getDirectTopLevelComplexTypeReferenceAccess().getRefAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportedTopLevelTypeReference
entryRuleImportedTopLevelTypeReference 
:
{ before(grammarAccess.getImportedTopLevelTypeReferenceRule()); }
	 ruleImportedTopLevelTypeReference
{ after(grammarAccess.getImportedTopLevelTypeReferenceRule()); } 
	 EOF 
;

// Rule ImportedTopLevelTypeReference
ruleImportedTopLevelTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportedTopLevelTypeReferenceAccess().getGroup()); }
(rule__ImportedTopLevelTypeReference__Group__0)
{ after(grammarAccess.getImportedTopLevelTypeReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportedTopLevelSimpleTypeReference
entryRuleImportedTopLevelSimpleTypeReference 
:
{ before(grammarAccess.getImportedTopLevelSimpleTypeReferenceRule()); }
	 ruleImportedTopLevelSimpleTypeReference
{ after(grammarAccess.getImportedTopLevelSimpleTypeReferenceRule()); } 
	 EOF 
;

// Rule ImportedTopLevelSimpleTypeReference
ruleImportedTopLevelSimpleTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportedTopLevelSimpleTypeReferenceAccess().getGroup()); }
(rule__ImportedTopLevelSimpleTypeReference__Group__0)
{ after(grammarAccess.getImportedTopLevelSimpleTypeReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportedTopLevelComplexTypeReference
entryRuleImportedTopLevelComplexTypeReference 
:
{ before(grammarAccess.getImportedTopLevelComplexTypeReferenceRule()); }
	 ruleImportedTopLevelComplexTypeReference
{ after(grammarAccess.getImportedTopLevelComplexTypeReferenceRule()); } 
	 EOF 
;

// Rule ImportedTopLevelComplexTypeReference
ruleImportedTopLevelComplexTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportedTopLevelComplexTypeReferenceAccess().getGroup()); }
(rule__ImportedTopLevelComplexTypeReference__Group__0)
{ after(grammarAccess.getImportedTopLevelComplexTypeReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleEmbeddedType
entryRuleEmbeddedType 
:
{ before(grammarAccess.getEmbeddedTypeRule()); }
	 ruleEmbeddedType
{ after(grammarAccess.getEmbeddedTypeRule()); } 
	 EOF 
;

// Rule EmbeddedType
ruleEmbeddedType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmbeddedTypeAccess().getAlternatives()); }
(rule__EmbeddedType__Alternatives)
{ after(grammarAccess.getEmbeddedTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmbeddedComplexType
entryRuleEmbeddedComplexType 
:
{ before(grammarAccess.getEmbeddedComplexTypeRule()); }
	 ruleEmbeddedComplexType
{ after(grammarAccess.getEmbeddedComplexTypeRule()); } 
	 EOF 
;

// Rule EmbeddedComplexType
ruleEmbeddedComplexType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmbeddedComplexTypeAccess().getGroup()); }
(rule__EmbeddedComplexType__Group__0)
{ after(grammarAccess.getEmbeddedComplexTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmbeddedSimpleType
entryRuleEmbeddedSimpleType 
:
{ before(grammarAccess.getEmbeddedSimpleTypeRule()); }
	 ruleEmbeddedSimpleType
{ after(grammarAccess.getEmbeddedSimpleTypeRule()); } 
	 EOF 
;

// Rule EmbeddedSimpleType
ruleEmbeddedSimpleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmbeddedSimpleTypeAccess().getGroup()); }
(rule__EmbeddedSimpleType__Group__0)
{ after(grammarAccess.getEmbeddedSimpleTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}








// Rule BuiltinType
ruleBuiltinType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltinTypeAccess().getAlternatives()); }
(rule__BuiltinType__Alternatives)
{ after(grammarAccess.getBuiltinTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__TopLevelDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelDefinitionAccess().getTopLevelTypeParserRuleCall_0()); }
	ruleTopLevelType
{ after(grammarAccess.getTopLevelDefinitionAccess().getTopLevelTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTopLevelDefinitionAccess().getTopLevelElementParserRuleCall_1()); }
	ruleTopLevelElement
{ after(grammarAccess.getTopLevelDefinitionAccess().getTopLevelElementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelTypeAccess().getTopLevelSimpleTypeParserRuleCall_0()); }
	ruleTopLevelSimpleType
{ after(grammarAccess.getTopLevelTypeAccess().getTopLevelSimpleTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTopLevelTypeAccess().getTopLevelComplexTypeParserRuleCall_1()); }
	ruleTopLevelComplexType
{ after(grammarAccess.getTopLevelTypeAccess().getTopLevelComplexTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelElement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelElementAccess().getGroup_2_0()); }
(rule__TopLevelElement__Group_2_0__0)
{ after(grammarAccess.getTopLevelElementAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getTopLevelElementAccess().getGroup_2_1()); }
(rule__TopLevelElement__Group_2_1__0)
{ after(grammarAccess.getTopLevelElementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getEnumerationFacetParserRuleCall_0()); }
	ruleEnumerationFacet
{ after(grammarAccess.getFacetAccess().getEnumerationFacetParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFacetAccess().getMaxLengthFacetParserRuleCall_1()); }
	ruleMaxLengthFacet
{ after(grammarAccess.getFacetAccess().getMaxLengthFacetParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFacetAccess().getPatternFacetParserRuleCall_2()); }
	rulePatternFacet
{ after(grammarAccess.getFacetAccess().getPatternFacetParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getFacetAccess().getRangeFacetParserRuleCall_3()); }
	ruleRangeFacet
{ after(grammarAccess.getFacetAccess().getRangeFacetParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getFacetAccess().getLengthFacetParserRuleCall_4()); }
	ruleLengthFacet
{ after(grammarAccess.getFacetAccess().getLengthFacetParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__ValueAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationLiteralAccess().getValueIDTerminalRuleCall_0_0_0()); }
	RULE_ID
{ after(grammarAccess.getEnumerationLiteralAccess().getValueIDTerminalRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getEnumerationLiteralAccess().getValueSTRINGTerminalRuleCall_0_0_1()); }
	RULE_STRING
{ after(grammarAccess.getEnumerationLiteralAccess().getValueSTRINGTerminalRuleCall_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getElementParserRuleCall_0()); }
	ruleElement
{ after(grammarAccess.getPropertyAccess().getElementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getAttributeParserRuleCall_1()); }
	ruleAttribute
{ after(grammarAccess.getPropertyAccess().getAttributeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getGroup_1_0()); }
(rule__Element__Group_1_0__0)
{ after(grammarAccess.getElementAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getElementAccess().getGroup_1_1()); }
(rule__Element__Group_1_1__0)
{ after(grammarAccess.getElementAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getUpperAssignment_3_0()); }
(rule__Multiplicity__UpperAssignment_3_0)
{ after(grammarAccess.getMultiplicityAccess().getUpperAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getMultiplicityAccess().getUnboundedAssignment_3_1()); }
(rule__Multiplicity__UnboundedAssignment_3_1)
{ after(grammarAccess.getMultiplicityAccess().getUnboundedAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeReference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTypeReferenceAccess().getTopLevelTypeReferenceParserRuleCall_0()); }
	ruleTopLevelTypeReference
{ after(grammarAccess.getNamedTypeReferenceAccess().getTopLevelTypeReferenceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNamedTypeReferenceAccess().getBuiltinTypeReferenceParserRuleCall_1()); }
	ruleBuiltinTypeReference
{ after(grammarAccess.getNamedTypeReferenceAccess().getBuiltinTypeReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonComplexTypeReference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonComplexTypeReferenceAccess().getTopLevelSimpleTypeReferenceParserRuleCall_0()); }
	ruleTopLevelSimpleTypeReference
{ after(grammarAccess.getNonComplexTypeReferenceAccess().getTopLevelSimpleTypeReferenceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNonComplexTypeReferenceAccess().getBuiltinTypeReferenceParserRuleCall_1()); }
	ruleBuiltinTypeReference
{ after(grammarAccess.getNonComplexTypeReferenceAccess().getBuiltinTypeReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelTypeReference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelTypeReferenceAccess().getDirectTopLevelTypeReferenceParserRuleCall_0()); }
	ruleDirectTopLevelTypeReference
{ after(grammarAccess.getTopLevelTypeReferenceAccess().getDirectTopLevelTypeReferenceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTopLevelTypeReferenceAccess().getImportedTopLevelTypeReferenceParserRuleCall_1()); }
	ruleImportedTopLevelTypeReference
{ after(grammarAccess.getTopLevelTypeReferenceAccess().getImportedTopLevelTypeReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelComplexTypeReference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelComplexTypeReferenceAccess().getDirectTopLevelComplexTypeReferenceParserRuleCall_0()); }
	ruleDirectTopLevelComplexTypeReference
{ after(grammarAccess.getTopLevelComplexTypeReferenceAccess().getDirectTopLevelComplexTypeReferenceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTopLevelComplexTypeReferenceAccess().getImportedTopLevelComplexTypeReferenceParserRuleCall_1()); }
	ruleImportedTopLevelComplexTypeReference
{ after(grammarAccess.getTopLevelComplexTypeReferenceAccess().getImportedTopLevelComplexTypeReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelSimpleTypeReference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelSimpleTypeReferenceAccess().getDirectTopLevelSimpleTypeReferenceParserRuleCall_0()); }
	ruleDirectTopLevelSimpleTypeReference
{ after(grammarAccess.getTopLevelSimpleTypeReferenceAccess().getDirectTopLevelSimpleTypeReferenceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTopLevelSimpleTypeReferenceAccess().getImportedTopLevelSimpleTypeReferenceParserRuleCall_1()); }
	ruleImportedTopLevelSimpleTypeReference
{ after(grammarAccess.getTopLevelSimpleTypeReferenceAccess().getImportedTopLevelSimpleTypeReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbeddedType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedTypeAccess().getEmbeddedComplexTypeParserRuleCall_0()); }
	ruleEmbeddedComplexType
{ after(grammarAccess.getEmbeddedTypeAccess().getEmbeddedComplexTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEmbeddedTypeAccess().getEmbeddedSimpleTypeParserRuleCall_1()); }
	ruleEmbeddedSimpleType
{ after(grammarAccess.getEmbeddedTypeAccess().getEmbeddedSimpleTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__BuiltinType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltinTypeAccess().getDurationEnumLiteralDeclaration_0()); }
(	'duration' 
)
{ after(grammarAccess.getBuiltinTypeAccess().getDurationEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBuiltinTypeAccess().getDateTimeEnumLiteralDeclaration_1()); }
(	'dateTime' 
)
{ after(grammarAccess.getBuiltinTypeAccess().getDateTimeEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getBuiltinTypeAccess().getTimeEnumLiteralDeclaration_2()); }
(	'time' 
)
{ after(grammarAccess.getBuiltinTypeAccess().getTimeEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getBuiltinTypeAccess().getDateEnumLiteralDeclaration_3()); }
(	'date' 
)
{ after(grammarAccess.getBuiltinTypeAccess().getDateEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getBuiltinTypeAccess().getStringEnumLiteralDeclaration_4()); }
(	'string' 
)
{ after(grammarAccess.getBuiltinTypeAccess().getStringEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getBuiltinTypeAccess().getDecimalEnumLiteralDeclaration_5()); }
(	'decimal' 
)
{ after(grammarAccess.getBuiltinTypeAccess().getDecimalEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getBuiltinTypeAccess().getIntegerEnumLiteralDeclaration_6()); }
(	'integer' 
)
{ after(grammarAccess.getBuiltinTypeAccess().getIntegerEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getBuiltinTypeAccess().getPositiveIntegerEnumLiteralDeclaration_7()); }
(	'positiveInteger' 
)
{ after(grammarAccess.getBuiltinTypeAccess().getPositiveIntegerEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getBuiltinTypeAccess().getNonNegativeIntegerEnumLiteralDeclaration_8()); }
(	'nonNegativeInteger' 
)
{ after(grammarAccess.getBuiltinTypeAccess().getNonNegativeIntegerEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getBuiltinTypeAccess().getTokenEnumLiteralDeclaration_9()); }
(	'token' 
)
{ after(grammarAccess.getBuiltinTypeAccess().getTokenEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getBuiltinTypeAccess().getBase64BinaryEnumLiteralDeclaration_10()); }
(	'base64Binary' 
)
{ after(grammarAccess.getBuiltinTypeAccess().getBase64BinaryEnumLiteralDeclaration_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Schema__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Schema__Group__0__Impl
	rule__Schema__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getSchemaKeyword_0()); }

	'schema' 

{ after(grammarAccess.getSchemaAccess().getSchemaKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Schema__Group__1__Impl
	rule__Schema__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getNameAssignment_1()); }
(rule__Schema__NameAssignment_1)
{ after(grammarAccess.getSchemaAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Schema__Group__2__Impl
	rule__Schema__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getNamespaceKeyword_2()); }

	'namespace' 

{ after(grammarAccess.getSchemaAccess().getNamespaceKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Schema__Group__3__Impl
	rule__Schema__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getNsURIAssignment_3()); }
(rule__Schema__NsURIAssignment_3)
{ after(grammarAccess.getSchemaAccess().getNsURIAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Schema__Group__4__Impl
	rule__Schema__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getImportsAssignment_4()); }
(rule__Schema__ImportsAssignment_4)*
{ after(grammarAccess.getSchemaAccess().getImportsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Schema__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getDefinitionsAssignment_5()); }
(rule__Schema__DefinitionsAssignment_5)*
{ after(grammarAccess.getSchemaAccess().getDefinitionsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__2__Impl
	rule__Import__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getAsKeyword_2()); }

	'as' 

{ after(grammarAccess.getImportAccess().getAsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getNsPrefixAssignment_3()); }
(rule__Import__NsPrefixAssignment_3)
{ after(grammarAccess.getImportAccess().getNsPrefixAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TopLevelElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelElement__Group__0__Impl
	rule__TopLevelElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelElementAccess().getElementKeyword_0()); }

	'element' 

{ after(grammarAccess.getTopLevelElementAccess().getElementKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelElement__Group__1__Impl
	rule__TopLevelElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelElementAccess().getNameAssignment_1()); }
(rule__TopLevelElement__NameAssignment_1)
{ after(grammarAccess.getTopLevelElementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelElementAccess().getAlternatives_2()); }
(rule__TopLevelElement__Alternatives_2)
{ after(grammarAccess.getTopLevelElementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TopLevelElement__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelElement__Group_2_0__0__Impl
	rule__TopLevelElement__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelElement__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelElementAccess().getHyphenMinusGreaterThanSignKeyword_2_0_0()); }

	'->' 

{ after(grammarAccess.getTopLevelElementAccess().getHyphenMinusGreaterThanSignKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelElement__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelElement__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelElement__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelElementAccess().getTypeRefAssignment_2_0_1()); }
(rule__TopLevelElement__TypeRefAssignment_2_0_1)
{ after(grammarAccess.getTopLevelElementAccess().getTypeRefAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TopLevelElement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelElement__Group_2_1__0__Impl
	rule__TopLevelElement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelElement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelElementAccess().getColonKeyword_2_1_0()); }

	':' 

{ after(grammarAccess.getTopLevelElementAccess().getColonKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelElement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelElement__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelElement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelElementAccess().getEmbeddedTypeDefAssignment_2_1_1()); }
(rule__TopLevelElement__EmbeddedTypeDefAssignment_2_1_1)
{ after(grammarAccess.getTopLevelElementAccess().getEmbeddedTypeDefAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TopLevelSimpleType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelSimpleType__Group__0__Impl
	rule__TopLevelSimpleType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelSimpleType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelSimpleTypeAccess().getSimpleTypeKeyword_0()); }

	'simple-type' 

{ after(grammarAccess.getTopLevelSimpleTypeAccess().getSimpleTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelSimpleType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelSimpleType__Group__1__Impl
	rule__TopLevelSimpleType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelSimpleType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelSimpleTypeAccess().getNameAssignment_1()); }
(rule__TopLevelSimpleType__NameAssignment_1)
{ after(grammarAccess.getTopLevelSimpleTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelSimpleType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelSimpleType__Group__2__Impl
	rule__TopLevelSimpleType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelSimpleType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelSimpleTypeAccess().getRestrictionAssignment_2()); }
(rule__TopLevelSimpleType__RestrictionAssignment_2)?
{ after(grammarAccess.getTopLevelSimpleTypeAccess().getRestrictionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelSimpleType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelSimpleType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelSimpleType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelSimpleTypeAccess().getDocumentationAssignment_3()); }
(rule__TopLevelSimpleType__DocumentationAssignment_3)?
{ after(grammarAccess.getTopLevelSimpleTypeAccess().getDocumentationAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Restriction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group__0__Impl
	rule__Restriction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getRestrictionAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group__1__Impl
	rule__Restriction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getTypeRefAssignment_1()); }
(rule__Restriction__TypeRefAssignment_1)
{ after(grammarAccess.getRestrictionAccess().getTypeRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group__2__Impl
	rule__Restriction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getRestrictionAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group__3__Impl
	rule__Restriction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getRestrictionAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRestrictionAccess().getFacetsAssignment_4()); }
(rule__Restriction__FacetsAssignment_4)
{ after(grammarAccess.getRestrictionAccess().getFacetsAssignment_4()); }
)
(
{ before(grammarAccess.getRestrictionAccess().getFacetsAssignment_4()); }
(rule__Restriction__FacetsAssignment_4)*
{ after(grammarAccess.getRestrictionAccess().getFacetsAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EnumerationFacet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationFacet__Group__0__Impl
	rule__EnumerationFacet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationFacet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationFacetAccess().getEnumerationKeyword_0()); }

	'enumeration' 

{ after(grammarAccess.getEnumerationFacetAccess().getEnumerationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationFacet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationFacet__Group__1__Impl
	rule__EnumerationFacet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationFacet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationFacetAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getEnumerationFacetAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationFacet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationFacet__Group__2__Impl
	rule__EnumerationFacet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationFacet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getEnumerationFacetAccess().getLiteralsAssignment_2()); }
(rule__EnumerationFacet__LiteralsAssignment_2)
{ after(grammarAccess.getEnumerationFacetAccess().getLiteralsAssignment_2()); }
)
(
{ before(grammarAccess.getEnumerationFacetAccess().getLiteralsAssignment_2()); }
(rule__EnumerationFacet__LiteralsAssignment_2)*
{ after(grammarAccess.getEnumerationFacetAccess().getLiteralsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationFacet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationFacet__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationFacet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationFacetAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getEnumerationFacetAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EnumerationLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationLiteral__Group__0__Impl
	rule__EnumerationLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationLiteralAccess().getValueAssignment_0()); }
(rule__EnumerationLiteral__ValueAssignment_0)
{ after(grammarAccess.getEnumerationLiteralAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationLiteralAccess().getGroup_1()); }
(rule__EnumerationLiteral__Group_1__0)?
{ after(grammarAccess.getEnumerationLiteralAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumerationLiteral__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationLiteral__Group_1__0__Impl
	rule__EnumerationLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationLiteralAccess().getColonColonKeyword_1_0()); }

	'::' 

{ after(grammarAccess.getEnumerationLiteralAccess().getColonColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationLiteral__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationLiteral__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationLiteralAccess().getAnnotationAssignment_1_1()); }
(rule__EnumerationLiteral__AnnotationAssignment_1_1)
{ after(grammarAccess.getEnumerationLiteralAccess().getAnnotationAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MaxLengthFacet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxLengthFacet__Group__0__Impl
	rule__MaxLengthFacet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxLengthFacet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxLengthFacetAccess().getMaxLengthKeyword_0()); }

	'maxLength' 

{ after(grammarAccess.getMaxLengthFacetAccess().getMaxLengthKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxLengthFacet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxLengthFacet__Group__1__Impl
	rule__MaxLengthFacet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxLengthFacet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxLengthFacetAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getMaxLengthFacetAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxLengthFacet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxLengthFacet__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxLengthFacet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxLengthFacetAccess().getMaxLengthAssignment_2()); }
(rule__MaxLengthFacet__MaxLengthAssignment_2)
{ after(grammarAccess.getMaxLengthFacetAccess().getMaxLengthAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PatternFacet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternFacet__Group__0__Impl
	rule__PatternFacet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFacet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternFacetAccess().getPatternKeyword_0()); }

	'pattern' 

{ after(grammarAccess.getPatternFacetAccess().getPatternKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PatternFacet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternFacet__Group__1__Impl
	rule__PatternFacet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFacet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternFacetAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getPatternFacetAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PatternFacet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternFacet__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFacet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternFacetAccess().getPatternAssignment_2()); }
(rule__PatternFacet__PatternAssignment_2)
{ after(grammarAccess.getPatternFacetAccess().getPatternAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RangeFacet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeFacet__Group__0__Impl
	rule__RangeFacet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFacet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeFacetAccess().getRangeKeyword_0()); }

	'range' 

{ after(grammarAccess.getRangeFacetAccess().getRangeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeFacet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeFacet__Group__1__Impl
	rule__RangeFacet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFacet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeFacetAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getRangeFacetAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeFacet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeFacet__Group__2__Impl
	rule__RangeFacet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFacet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeFacetAccess().getLowerAssignment_2()); }
(rule__RangeFacet__LowerAssignment_2)
{ after(grammarAccess.getRangeFacetAccess().getLowerAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeFacet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeFacet__Group__3__Impl
	rule__RangeFacet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFacet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeFacetAccess().getFullStopFullStopKeyword_3()); }

	'..' 

{ after(grammarAccess.getRangeFacetAccess().getFullStopFullStopKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeFacet__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeFacet__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFacet__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeFacetAccess().getUpperAssignment_4()); }
(rule__RangeFacet__UpperAssignment_4)
{ after(grammarAccess.getRangeFacetAccess().getUpperAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LengthFacet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LengthFacet__Group__0__Impl
	rule__LengthFacet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthFacet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthFacetAccess().getLengthKeyword_0()); }

	'length' 

{ after(grammarAccess.getLengthFacetAccess().getLengthKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LengthFacet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LengthFacet__Group__1__Impl
	rule__LengthFacet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthFacet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthFacetAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getLengthFacetAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LengthFacet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LengthFacet__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthFacet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthFacetAccess().getLengthAssignment_2()); }
(rule__LengthFacet__LengthAssignment_2)
{ after(grammarAccess.getLengthFacetAccess().getLengthAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Documentation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Documentation__Group__0__Impl
	rule__Documentation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Documentation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDocumentationAccess().getColonColonKeyword_0()); }

	'::' 

{ after(grammarAccess.getDocumentationAccess().getColonColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Documentation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Documentation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Documentation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDocumentationAccess().getTextAssignment_1()); }
(rule__Documentation__TextAssignment_1)
{ after(grammarAccess.getDocumentationAccess().getTextAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TopLevelComplexType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelComplexType__Group__0__Impl
	rule__TopLevelComplexType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelComplexType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelComplexTypeAccess().getAbstractAssignment_0()); }
(rule__TopLevelComplexType__AbstractAssignment_0)?
{ after(grammarAccess.getTopLevelComplexTypeAccess().getAbstractAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelComplexType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelComplexType__Group__1__Impl
	rule__TopLevelComplexType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelComplexType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelComplexTypeAccess().getComplexTypeKeyword_1()); }

	'complex-type' 

{ after(grammarAccess.getTopLevelComplexTypeAccess().getComplexTypeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelComplexType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelComplexType__Group__2__Impl
	rule__TopLevelComplexType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelComplexType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelComplexTypeAccess().getNameAssignment_2()); }
(rule__TopLevelComplexType__NameAssignment_2)
{ after(grammarAccess.getTopLevelComplexTypeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelComplexType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelComplexType__Group__3__Impl
	rule__TopLevelComplexType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelComplexType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelComplexTypeAccess().getGroup_3()); }
(rule__TopLevelComplexType__Group_3__0)?
{ after(grammarAccess.getTopLevelComplexTypeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelComplexType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelComplexType__Group__4__Impl
	rule__TopLevelComplexType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelComplexType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelComplexTypeAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getTopLevelComplexTypeAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelComplexType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelComplexType__Group__5__Impl
	rule__TopLevelComplexType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelComplexType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelComplexTypeAccess().getPropertiesAssignment_5()); }
(rule__TopLevelComplexType__PropertiesAssignment_5)*
{ after(grammarAccess.getTopLevelComplexTypeAccess().getPropertiesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelComplexType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelComplexType__Group__6__Impl
	rule__TopLevelComplexType__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelComplexType__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelComplexTypeAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getTopLevelComplexTypeAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelComplexType__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelComplexType__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelComplexType__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelComplexTypeAccess().getGroup_7()); }
(rule__TopLevelComplexType__Group_7__0)?
{ after(grammarAccess.getTopLevelComplexTypeAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__TopLevelComplexType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelComplexType__Group_3__0__Impl
	rule__TopLevelComplexType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelComplexType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelComplexTypeAccess().getExtendsKeyword_3_0()); }

	'extends' 

{ after(grammarAccess.getTopLevelComplexTypeAccess().getExtendsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelComplexType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelComplexType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelComplexType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelComplexTypeAccess().getExtendsAssignment_3_1()); }
(rule__TopLevelComplexType__ExtendsAssignment_3_1)
{ after(grammarAccess.getTopLevelComplexTypeAccess().getExtendsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TopLevelComplexType__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelComplexType__Group_7__0__Impl
	rule__TopLevelComplexType__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelComplexType__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelComplexTypeAccess().getDocumentationKeyword_7_0()); }

	'documentation:' 

{ after(grammarAccess.getTopLevelComplexTypeAccess().getDocumentationKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelComplexType__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelComplexType__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelComplexType__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelComplexTypeAccess().getDocumentationAssignment_7_1()); }
(rule__TopLevelComplexType__DocumentationAssignment_7_1)
{ after(grammarAccess.getTopLevelComplexTypeAccess().getDocumentationAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Element__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element__Group__0__Impl
	rule__Element__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getNameAssignment_0()); }
(rule__Element__NameAssignment_0)
{ after(grammarAccess.getElementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element__Group__1__Impl
	rule__Element__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getAlternatives_1()); }
(rule__Element__Alternatives_1)
{ after(grammarAccess.getElementAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getMultiplicityAssignment_2()); }
(rule__Element__MultiplicityAssignment_2)?
{ after(grammarAccess.getElementAccess().getMultiplicityAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Element__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element__Group_1_0__0__Impl
	rule__Element__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getHyphenMinusGreaterThanSignKeyword_1_0_0()); }

	'->' 

{ after(grammarAccess.getElementAccess().getHyphenMinusGreaterThanSignKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getTypeRefAssignment_1_0_1()); }
(rule__Element__TypeRefAssignment_1_0_1)
{ after(grammarAccess.getElementAccess().getTypeRefAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Element__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element__Group_1_1__0__Impl
	rule__Element__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getColonKeyword_1_1_0()); }

	':' 

{ after(grammarAccess.getElementAccess().getColonKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getEmbeddedTypeDefAssignment_1_1_1()); }
(rule__Element__EmbeddedTypeDefAssignment_1_1_1)
{ after(grammarAccess.getElementAccess().getEmbeddedTypeDefAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getRequiredAssignment_0()); }
(rule__Attribute__RequiredAssignment_0)?
{ after(grammarAccess.getAttributeAccess().getRequiredAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getCommercialAtKeyword_1()); }

	'@' 

{ after(grammarAccess.getAttributeAccess().getCommercialAtKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment_2()); }
(rule__Attribute__NameAssignment_2)
{ after(grammarAccess.getAttributeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__3__Impl
	rule__Attribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getHyphenMinusGreaterThanSignKeyword_3()); }

	'->' 

{ after(grammarAccess.getAttributeAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeRefAssignment_4()); }
(rule__Attribute__TypeRefAssignment_4)
{ after(grammarAccess.getAttributeAccess().getTypeRefAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Multiplicity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group__0__Impl
	rule__Multiplicity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getMultiplicityAction_0()); }
(

)
{ after(grammarAccess.getMultiplicityAccess().getMultiplicityAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group__1__Impl
	rule__Multiplicity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getMultiplicityAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group__2__Impl
	rule__Multiplicity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getGroup_2()); }
(rule__Multiplicity__Group_2__0)
{ after(grammarAccess.getMultiplicityAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group__3__Impl
	rule__Multiplicity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getAlternatives_3()); }
(rule__Multiplicity__Alternatives_3)
{ after(grammarAccess.getMultiplicityAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getMultiplicityAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Multiplicity__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group_2__0__Impl
	rule__Multiplicity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getLowerAssignment_2_0()); }
(rule__Multiplicity__LowerAssignment_2_0)
{ after(grammarAccess.getMultiplicityAccess().getLowerAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getFullStopFullStopKeyword_2_1()); }

	'..' 

{ after(grammarAccess.getMultiplicityAccess().getFullStopFullStopKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportedTopLevelTypeReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportedTopLevelTypeReference__Group__0__Impl
	rule__ImportedTopLevelTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedTopLevelTypeReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportedTopLevelTypeReferenceAccess().getImportAssignment_0()); }
(rule__ImportedTopLevelTypeReference__ImportAssignment_0)
{ after(grammarAccess.getImportedTopLevelTypeReferenceAccess().getImportAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportedTopLevelTypeReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportedTopLevelTypeReference__Group__1__Impl
	rule__ImportedTopLevelTypeReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedTopLevelTypeReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportedTopLevelTypeReferenceAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getImportedTopLevelTypeReferenceAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportedTopLevelTypeReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportedTopLevelTypeReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedTopLevelTypeReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportedTopLevelTypeReferenceAccess().getRefAssignment_2()); }
(rule__ImportedTopLevelTypeReference__RefAssignment_2)
{ after(grammarAccess.getImportedTopLevelTypeReferenceAccess().getRefAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportedTopLevelSimpleTypeReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportedTopLevelSimpleTypeReference__Group__0__Impl
	rule__ImportedTopLevelSimpleTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedTopLevelSimpleTypeReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportedTopLevelSimpleTypeReferenceAccess().getImportAssignment_0()); }
(rule__ImportedTopLevelSimpleTypeReference__ImportAssignment_0)
{ after(grammarAccess.getImportedTopLevelSimpleTypeReferenceAccess().getImportAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportedTopLevelSimpleTypeReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportedTopLevelSimpleTypeReference__Group__1__Impl
	rule__ImportedTopLevelSimpleTypeReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedTopLevelSimpleTypeReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportedTopLevelSimpleTypeReferenceAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getImportedTopLevelSimpleTypeReferenceAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportedTopLevelSimpleTypeReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportedTopLevelSimpleTypeReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedTopLevelSimpleTypeReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportedTopLevelSimpleTypeReferenceAccess().getRefAssignment_2()); }
(rule__ImportedTopLevelSimpleTypeReference__RefAssignment_2)
{ after(grammarAccess.getImportedTopLevelSimpleTypeReferenceAccess().getRefAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportedTopLevelComplexTypeReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportedTopLevelComplexTypeReference__Group__0__Impl
	rule__ImportedTopLevelComplexTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedTopLevelComplexTypeReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportedTopLevelComplexTypeReferenceAccess().getImportAssignment_0()); }
(rule__ImportedTopLevelComplexTypeReference__ImportAssignment_0)
{ after(grammarAccess.getImportedTopLevelComplexTypeReferenceAccess().getImportAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportedTopLevelComplexTypeReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportedTopLevelComplexTypeReference__Group__1__Impl
	rule__ImportedTopLevelComplexTypeReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedTopLevelComplexTypeReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportedTopLevelComplexTypeReferenceAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getImportedTopLevelComplexTypeReferenceAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportedTopLevelComplexTypeReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportedTopLevelComplexTypeReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedTopLevelComplexTypeReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportedTopLevelComplexTypeReferenceAccess().getRefAssignment_2()); }
(rule__ImportedTopLevelComplexTypeReference__RefAssignment_2)
{ after(grammarAccess.getImportedTopLevelComplexTypeReferenceAccess().getRefAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EmbeddedComplexType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedComplexType__Group__0__Impl
	rule__EmbeddedComplexType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedComplexType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedComplexTypeAccess().getEmbeddedComplexTypeAction_0()); }
(

)
{ after(grammarAccess.getEmbeddedComplexTypeAccess().getEmbeddedComplexTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbeddedComplexType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedComplexType__Group__1__Impl
	rule__EmbeddedComplexType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedComplexType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedComplexTypeAccess().getComplexTypeKeyword_1()); }

	'complex-type' 

{ after(grammarAccess.getEmbeddedComplexTypeAccess().getComplexTypeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbeddedComplexType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedComplexType__Group__2__Impl
	rule__EmbeddedComplexType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedComplexType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedComplexTypeAccess().getGroup_2()); }
(rule__EmbeddedComplexType__Group_2__0)?
{ after(grammarAccess.getEmbeddedComplexTypeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbeddedComplexType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedComplexType__Group__3__Impl
	rule__EmbeddedComplexType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedComplexType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedComplexTypeAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getEmbeddedComplexTypeAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbeddedComplexType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedComplexType__Group__4__Impl
	rule__EmbeddedComplexType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedComplexType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedComplexTypeAccess().getPropertiesAssignment_4()); }
(rule__EmbeddedComplexType__PropertiesAssignment_4)*
{ after(grammarAccess.getEmbeddedComplexTypeAccess().getPropertiesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbeddedComplexType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedComplexType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedComplexType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedComplexTypeAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getEmbeddedComplexTypeAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__EmbeddedComplexType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedComplexType__Group_2__0__Impl
	rule__EmbeddedComplexType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedComplexType__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedComplexTypeAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getEmbeddedComplexTypeAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbeddedComplexType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedComplexType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedComplexType__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedComplexTypeAccess().getExtendsAssignment_2_1()); }
(rule__EmbeddedComplexType__ExtendsAssignment_2_1)
{ after(grammarAccess.getEmbeddedComplexTypeAccess().getExtendsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EmbeddedSimpleType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedSimpleType__Group__0__Impl
	rule__EmbeddedSimpleType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedSimpleType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedSimpleTypeAccess().getSimpleTypeKeyword_0()); }

	'simple-type' 

{ after(grammarAccess.getEmbeddedSimpleTypeAccess().getSimpleTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbeddedSimpleType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedSimpleType__Group__1__Impl
	rule__EmbeddedSimpleType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedSimpleType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedSimpleTypeAccess().getRestrictionAssignment_1()); }
(rule__EmbeddedSimpleType__RestrictionAssignment_1)
{ after(grammarAccess.getEmbeddedSimpleTypeAccess().getRestrictionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbeddedSimpleType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbeddedSimpleType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedSimpleType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedSimpleTypeAccess().getDocumentationAssignment_2()); }
(rule__EmbeddedSimpleType__DocumentationAssignment_2)?
{ after(grammarAccess.getEmbeddedSimpleTypeAccess().getDocumentationAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Schema__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSchemaAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__NsURIAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getNsURISTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getSchemaAccess().getNsURISTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__ImportsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getImportsImportParserRuleCall_4_0()); }
	ruleImport{ after(grammarAccess.getSchemaAccess().getImportsImportParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__DefinitionsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getDefinitionsTopLevelDefinitionParserRuleCall_5_0()); }
	ruleTopLevelDefinition{ after(grammarAccess.getSchemaAccess().getDefinitionsTopLevelDefinitionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__NsPrefixAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getNsPrefixIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getImportAccess().getNsPrefixIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelElement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelElementAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTopLevelElementAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelElement__TypeRefAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelElementAccess().getTypeRefNamedTypeReferenceParserRuleCall_2_0_1_0()); }
	ruleNamedTypeReference{ after(grammarAccess.getTopLevelElementAccess().getTypeRefNamedTypeReferenceParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelElement__EmbeddedTypeDefAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelElementAccess().getEmbeddedTypeDefEmbeddedTypeParserRuleCall_2_1_1_0()); }
	ruleEmbeddedType{ after(grammarAccess.getTopLevelElementAccess().getEmbeddedTypeDefEmbeddedTypeParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelSimpleType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelSimpleTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTopLevelSimpleTypeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelSimpleType__RestrictionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelSimpleTypeAccess().getRestrictionRestrictionParserRuleCall_2_0()); }
	ruleRestriction{ after(grammarAccess.getTopLevelSimpleTypeAccess().getRestrictionRestrictionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelSimpleType__DocumentationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelSimpleTypeAccess().getDocumentationDocumentationParserRuleCall_3_0()); }
	ruleDocumentation{ after(grammarAccess.getTopLevelSimpleTypeAccess().getDocumentationDocumentationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__TypeRefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getTypeRefNonComplexTypeReferenceParserRuleCall_1_0()); }
	ruleNonComplexTypeReference{ after(grammarAccess.getRestrictionAccess().getTypeRefNonComplexTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__FacetsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getFacetsFacetParserRuleCall_4_0()); }
	ruleFacet{ after(grammarAccess.getRestrictionAccess().getFacetsFacetParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationFacet__LiteralsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationFacetAccess().getLiteralsEnumerationLiteralParserRuleCall_2_0()); }
	ruleEnumerationLiteral{ after(grammarAccess.getEnumerationFacetAccess().getLiteralsEnumerationLiteralParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationLiteralAccess().getValueAlternatives_0_0()); }
(rule__EnumerationLiteral__ValueAlternatives_0_0)
{ after(grammarAccess.getEnumerationLiteralAccess().getValueAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__AnnotationAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationLiteralAccess().getAnnotationSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getEnumerationLiteralAccess().getAnnotationSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MaxLengthFacet__MaxLengthAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxLengthFacetAccess().getMaxLengthINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getMaxLengthFacetAccess().getMaxLengthINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFacet__PatternAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternFacetAccess().getPatternPATTERN_STRINGTerminalRuleCall_2_0()); }
	RULE_PATTERN_STRING{ after(grammarAccess.getPatternFacetAccess().getPatternPATTERN_STRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFacet__LowerAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeFacetAccess().getLowerINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getRangeFacetAccess().getLowerINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeFacet__UpperAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeFacetAccess().getUpperINTTerminalRuleCall_4_0()); }
	RULE_INT{ after(grammarAccess.getRangeFacetAccess().getUpperINTTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LengthFacet__LengthAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthFacetAccess().getLengthINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getLengthFacetAccess().getLengthINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Documentation__TextAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDocumentationAccess().getTextSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getDocumentationAccess().getTextSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelComplexType__AbstractAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelComplexTypeAccess().getAbstractAbstractKeyword_0_0()); }
(
{ before(grammarAccess.getTopLevelComplexTypeAccess().getAbstractAbstractKeyword_0_0()); }

	'abstract' 

{ after(grammarAccess.getTopLevelComplexTypeAccess().getAbstractAbstractKeyword_0_0()); }
)

{ after(grammarAccess.getTopLevelComplexTypeAccess().getAbstractAbstractKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelComplexType__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelComplexTypeAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getTopLevelComplexTypeAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelComplexType__ExtendsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelComplexTypeAccess().getExtendsTopLevelComplexTypeReferenceParserRuleCall_3_1_0()); }
	ruleTopLevelComplexTypeReference{ after(grammarAccess.getTopLevelComplexTypeAccess().getExtendsTopLevelComplexTypeReferenceParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelComplexType__PropertiesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelComplexTypeAccess().getPropertiesPropertyParserRuleCall_5_0()); }
	ruleProperty{ after(grammarAccess.getTopLevelComplexTypeAccess().getPropertiesPropertyParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelComplexType__DocumentationAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelComplexTypeAccess().getDocumentationSTRINGTerminalRuleCall_7_1_0()); }
	RULE_STRING{ after(grammarAccess.getTopLevelComplexTypeAccess().getDocumentationSTRINGTerminalRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getElementAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element__TypeRefAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getTypeRefNamedTypeReferenceParserRuleCall_1_0_1_0()); }
	ruleNamedTypeReference{ after(grammarAccess.getElementAccess().getTypeRefNamedTypeReferenceParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element__EmbeddedTypeDefAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getEmbeddedTypeDefEmbeddedTypeParserRuleCall_1_1_1_0()); }
	ruleEmbeddedType{ after(grammarAccess.getElementAccess().getEmbeddedTypeDefEmbeddedTypeParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element__MultiplicityAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getMultiplicityMultiplicityParserRuleCall_2_0()); }
	ruleMultiplicity{ after(grammarAccess.getElementAccess().getMultiplicityMultiplicityParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__RequiredAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getRequiredRequiredKeyword_0_0()); }
(
{ before(grammarAccess.getAttributeAccess().getRequiredRequiredKeyword_0_0()); }

	'required' 

{ after(grammarAccess.getAttributeAccess().getRequiredRequiredKeyword_0_0()); }
)

{ after(grammarAccess.getAttributeAccess().getRequiredRequiredKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeRefAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeRefNonComplexTypeReferenceParserRuleCall_4_0()); }
	ruleNonComplexTypeReference{ after(grammarAccess.getAttributeAccess().getTypeRefNonComplexTypeReferenceParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__LowerAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getLowerINTTerminalRuleCall_2_0_0()); }
	RULE_INT{ after(grammarAccess.getMultiplicityAccess().getLowerINTTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__UpperAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getUpperINTTerminalRuleCall_3_0_0()); }
	RULE_INT{ after(grammarAccess.getMultiplicityAccess().getUpperINTTerminalRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__UnboundedAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getUnboundedAsteriskKeyword_3_1_0()); }
(
{ before(grammarAccess.getMultiplicityAccess().getUnboundedAsteriskKeyword_3_1_0()); }

	'*' 

{ after(grammarAccess.getMultiplicityAccess().getUnboundedAsteriskKeyword_3_1_0()); }
)

{ after(grammarAccess.getMultiplicityAccess().getUnboundedAsteriskKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinTypeReference__BuiltinAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltinTypeReferenceAccess().getBuiltinBuiltinTypeEnumRuleCall_0()); }
	ruleBuiltinType{ after(grammarAccess.getBuiltinTypeReferenceAccess().getBuiltinBuiltinTypeEnumRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirectTopLevelTypeReference__RefAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectTopLevelTypeReferenceAccess().getRefTopLevelTypeCrossReference_0()); }
(
{ before(grammarAccess.getDirectTopLevelTypeReferenceAccess().getRefTopLevelTypeIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getDirectTopLevelTypeReferenceAccess().getRefTopLevelTypeIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getDirectTopLevelTypeReferenceAccess().getRefTopLevelTypeCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirectTopLevelSimpleTypeReference__RefAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectTopLevelSimpleTypeReferenceAccess().getRefTopLevelSimpleTypeCrossReference_0()); }
(
{ before(grammarAccess.getDirectTopLevelSimpleTypeReferenceAccess().getRefTopLevelSimpleTypeIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getDirectTopLevelSimpleTypeReferenceAccess().getRefTopLevelSimpleTypeIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getDirectTopLevelSimpleTypeReferenceAccess().getRefTopLevelSimpleTypeCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirectTopLevelComplexTypeReference__RefAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectTopLevelComplexTypeReferenceAccess().getRefTopLevelComplexTypeCrossReference_0()); }
(
{ before(grammarAccess.getDirectTopLevelComplexTypeReferenceAccess().getRefTopLevelComplexTypeIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getDirectTopLevelComplexTypeReferenceAccess().getRefTopLevelComplexTypeIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getDirectTopLevelComplexTypeReferenceAccess().getRefTopLevelComplexTypeCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedTopLevelTypeReference__ImportAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportedTopLevelTypeReferenceAccess().getImportImportCrossReference_0_0()); }
(
{ before(grammarAccess.getImportedTopLevelTypeReferenceAccess().getImportImportIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getImportedTopLevelTypeReferenceAccess().getImportImportIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getImportedTopLevelTypeReferenceAccess().getImportImportCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedTopLevelTypeReference__RefAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportedTopLevelTypeReferenceAccess().getRefTopLevelTypeCrossReference_2_0()); }
(
{ before(grammarAccess.getImportedTopLevelTypeReferenceAccess().getRefTopLevelTypeIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getImportedTopLevelTypeReferenceAccess().getRefTopLevelTypeIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getImportedTopLevelTypeReferenceAccess().getRefTopLevelTypeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedTopLevelSimpleTypeReference__ImportAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportedTopLevelSimpleTypeReferenceAccess().getImportImportCrossReference_0_0()); }
(
{ before(grammarAccess.getImportedTopLevelSimpleTypeReferenceAccess().getImportImportIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getImportedTopLevelSimpleTypeReferenceAccess().getImportImportIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getImportedTopLevelSimpleTypeReferenceAccess().getImportImportCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedTopLevelSimpleTypeReference__RefAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportedTopLevelSimpleTypeReferenceAccess().getRefTopLevelSimpleTypeCrossReference_2_0()); }
(
{ before(grammarAccess.getImportedTopLevelSimpleTypeReferenceAccess().getRefTopLevelSimpleTypeIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getImportedTopLevelSimpleTypeReferenceAccess().getRefTopLevelSimpleTypeIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getImportedTopLevelSimpleTypeReferenceAccess().getRefTopLevelSimpleTypeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedTopLevelComplexTypeReference__ImportAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportedTopLevelComplexTypeReferenceAccess().getImportImportCrossReference_0_0()); }
(
{ before(grammarAccess.getImportedTopLevelComplexTypeReferenceAccess().getImportImportIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getImportedTopLevelComplexTypeReferenceAccess().getImportImportIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getImportedTopLevelComplexTypeReferenceAccess().getImportImportCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedTopLevelComplexTypeReference__RefAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportedTopLevelComplexTypeReferenceAccess().getRefTopLevelComplexTypeCrossReference_2_0()); }
(
{ before(grammarAccess.getImportedTopLevelComplexTypeReferenceAccess().getRefTopLevelComplexTypeIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getImportedTopLevelComplexTypeReferenceAccess().getRefTopLevelComplexTypeIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getImportedTopLevelComplexTypeReferenceAccess().getRefTopLevelComplexTypeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedComplexType__ExtendsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedComplexTypeAccess().getExtendsTopLevelComplexTypeReferenceParserRuleCall_2_1_0()); }
	ruleTopLevelComplexTypeReference{ after(grammarAccess.getEmbeddedComplexTypeAccess().getExtendsTopLevelComplexTypeReferenceParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedComplexType__PropertiesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedComplexTypeAccess().getPropertiesPropertyParserRuleCall_4_0()); }
	ruleProperty{ after(grammarAccess.getEmbeddedComplexTypeAccess().getPropertiesPropertyParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedSimpleType__RestrictionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedSimpleTypeAccess().getRestrictionRestrictionParserRuleCall_1_0()); }
	ruleRestriction{ after(grammarAccess.getEmbeddedSimpleTypeAccess().getRestrictionRestrictionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedSimpleType__DocumentationAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbeddedSimpleTypeAccess().getDocumentationDocumentationParserRuleCall_2_0()); }
	ruleDocumentation{ after(grammarAccess.getEmbeddedSimpleTypeAccess().getDocumentationDocumentationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_PATTERN_STRING : '/' ('\\' '/'|~('/'))* '/';

RULE_ID : '^'? ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


