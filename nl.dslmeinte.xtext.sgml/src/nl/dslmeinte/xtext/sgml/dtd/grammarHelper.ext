import dtdModel;

extension nl::dslmeinte::xtext::dtd::dtdExtensions;
extension org::eclipse::xtend::util::stdlib::io;


// returns whether the close tag of this Element is optional:
Boolean isCloseTagOptional(Element this) : EmptyContent.isAssignableFrom(content.metaType);

// returns whether this Attribute is optional:
Boolean isOptional(Attribute this) : cardinality == AttributeCardinality::implied;

// returns the Xtext syntax for ElementCardinality literals:
String syntax(ElementCardinality this) :
	switch(this) {
		case ElementCardinality::optional	: '?'
		case ElementCardinality::zeroOrMore	: '*'
		case ElementCardinality::oneOrMore	: '+'
		default	: 'error'
	};

// returns whether this Element can have no content at all (including Attribute-s):
Boolean canBeEmpty(Element this) :
		attributes().forAll( a | a.cardinality == AttributeCardinality::implied )
//	&&	content.canBeEmpty()
	;

private Boolean canBeEmpty(Expression this) :
	// sentinel:
	( "no Xtension 'canBeEmpty' defined for sub type " + metaType.name + " of " + Expression.metaType.name ).error();

private Boolean canBeEmpty(Alternatives		this) : alternatives.exists( e | e.canBeEmpty() );
private Boolean canBeEmpty(Concatenation	this) : members.forAll( e | e.canBeEmpty() );
private Boolean canBeEmpty(Cardinality		this) :    nestedExpr.canBeEmpty()
												    && cardinality != ElementCardinality::oneOrMore;
private Boolean canBeEmpty(EmptyContent		this) : true;
private Boolean canBeEmpty(PCData			this) : true;
private Boolean canBeEmpty(ElementReference	this) : false;

