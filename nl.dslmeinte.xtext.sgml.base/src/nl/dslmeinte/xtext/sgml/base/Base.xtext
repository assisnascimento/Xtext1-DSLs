grammar nl.dslmeinte.xtext.sgml.base.Base

generate base "http://www.dslmeinte.nl/xtext/sgml/base/Base"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
	// (need to import Ecore because of terminal definitions)


/*
 * The following rule can/should be overridden by the including grammar
 * to add a 'root' feature or alter parsing behavior more profoundly.
 */
SgmlDocument hidden(WHITESPACE, HEADER_COMMENTS):
	SGML_COMMENTS*
	'<' '!DOCTYPE' rootName=IDENTIFIER ('PUBLIC' | 'SYSTEM') header1=QuotedString header2=QuotedString?
		('[' ( entities+=Entity | SGML_COMMENTS )* ']')? '>'
	;
	/*
	 * SGML comments are not valid inside Entity instances, but
	 * I don't want to make a separate Entities rule to be able
	 * to allow SGML comments inside [..] but outside Entity
	 * instances, hence the somewhat strange construct in line 15.
	 */

Entity hidden(WHITESPACE, HEADER_COMMENTS):
	'<' '!ENTITY' name=IDENTIFIER 'SYSTEM'? path=QuotedString '>'
	;

_PCDATA:					contents+=_PCDATAContents+;
_PCDATAContents:			_PCDATALiteralContents | _PCDATAEntityReference;
_PCDATALiteralContents:		text=(LITERAL_CONTENTS|WHITESPACE);
_PCDATAEntityReference:		'&' entity=[Entity|IDENTIFIER] ';';

QuotedString:
	('"'|"'") QUOTED_STRING ('"'|"'");	// lexer ensures that quote characters actually match

terminal IDENTIFIER			: ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
terminal QUOTED_STRING		: '###somethingThatDoesn\'tMatchWithAnythingElse###';

terminal SGML_COMMENTS		: '<!--' -> '-->';
terminal HEADER_COMMENTS	: '--' -> '--';

terminal WHITESPACE			: (' '|'\t'|'\r'|'\n')+;

terminal LITERAL_CONTENTS	: '$$$somethingThatDoesn\'tMatchWithAnythingElse$$$';

	/*
	 * For QUOTED_STRING and LITERAL_CONTENTS, we need something that
	 * doesn't match with any other terminal here so ANTLR doesn't get
	 * confused for nothing because we're using a custom (generic) lexer
	 * anyway.
	 */

