<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:xtext="http://www.eclipse.org/2008/Xtext">
  <xtext:Grammar name="nl.dslmeinte.xtext.examples.XsdLanguage" usedGrammars="/1">
    <metamodelDeclarations xsi:type="xtext:GeneratedMetamodel" name="xsdLanguage">
      <ePackage href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#/"/>
    </metamodelDeclarations>
    <rules xsi:type="xtext:ParserRule" name="Schema">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//Schema"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="schema"/>
        <elements xsi:type="xtext:Assignment" feature="name" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.40"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="namespace"/>
        <elements xsi:type="xtext:Assignment" feature="nsURI" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.2"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="*" feature="imports" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.1"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="*" feature="definitions" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.2"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Import">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//Import"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="import"/>
        <elements xsi:type="xtext:Assignment" feature="importURI" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.2"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="as"/>
        <elements xsi:type="xtext:Assignment" feature="nsPrefix" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.40"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="TopLevelDefinition">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//TopLevelDefinition"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.3"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.4"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="TopLevelType">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//TopLevelType"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.5"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.16"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="TopLevelElement">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//TopLevelElement"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="element"/>
        <elements xsi:type="xtext:Assignment" feature="name" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.40"/>
        </elements>
        <elements xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:Group">
            <elements xsi:type="xtext:Keyword" value="->"/>
            <elements xsi:type="xtext:Assignment" feature="typeRef" operator="=">
              <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.21"/>
            </elements>
          </elements>
          <elements xsi:type="xtext:Group">
            <elements xsi:type="xtext:Keyword" value=":"/>
            <elements xsi:type="xtext:Assignment" feature="embeddedTypeDef" operator="=">
              <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.34"/>
            </elements>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="TopLevelSimpleType">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//TopLevelSimpleType"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="simple-type"/>
        <elements xsi:type="xtext:Assignment" feature="name" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.40"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="restriction" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.6"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="documentation" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.15"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Restriction">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//Restriction"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="["/>
        <elements xsi:type="xtext:Assignment" feature="typeRef" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.22"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="]"/>
        <elements xsi:type="xtext:Keyword" value=":"/>
        <elements xsi:type="xtext:Assignment" cardinality="+" feature="facets" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.7"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Facet">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//Facet"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.8"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.10"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.11"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.13"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.14"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="EnumerationFacet">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//EnumerationFacet"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="enumeration"/>
        <elements xsi:type="xtext:Keyword" value="{"/>
        <elements xsi:type="xtext:Assignment" cardinality="+" feature="literals" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="}"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="EnumerationLiteral">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//EnumerationLiteral"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="value" operator="=">
          <terminal xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:RuleCall" rule="/0/@rules.40"/>
            <elements xsi:type="xtext:RuleCall" rule="/1/@rules.2"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="::"/>
          <elements xsi:type="xtext:Assignment" feature="annotation" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.2"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="MaxLengthFacet">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//MaxLengthFacet"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="maxLength"/>
        <elements xsi:type="xtext:Keyword" value="="/>
        <elements xsi:type="xtext:Assignment" feature="maxLength" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.1"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="PatternFacet">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//PatternFacet"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="pattern"/>
        <elements xsi:type="xtext:Keyword" value="="/>
        <elements xsi:type="xtext:Assignment" feature="pattern" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.12"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="PATTERN_STRING">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="/"/>
        <elements xsi:type="xtext:Alternatives" cardinality="*">
          <elements xsi:type="xtext:Group">
            <elements xsi:type="xtext:Keyword" value="\"/>
            <elements xsi:type="xtext:Keyword" value="/"/>
          </elements>
          <elements xsi:type="xtext:NegatedToken">
            <terminal xsi:type="xtext:Keyword" value="/"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Keyword" value="/"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="RangeFacet">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//RangeFacet"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="range"/>
        <elements xsi:type="xtext:Keyword" value="="/>
        <elements xsi:type="xtext:Assignment" feature="lower" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.1"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=".."/>
        <elements xsi:type="xtext:Assignment" feature="upper" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.1"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="LengthFacet">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//LengthFacet"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="length"/>
        <elements xsi:type="xtext:Keyword" value="="/>
        <elements xsi:type="xtext:Assignment" feature="length" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.1"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Documentation">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//Documentation"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="::"/>
        <elements xsi:type="xtext:Assignment" feature="text" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.2"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="TopLevelComplexType">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//TopLevelComplexType"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="abstract" operator="?=">
          <terminal xsi:type="xtext:Keyword" value="abstract"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="complex-type"/>
        <elements xsi:type="xtext:Assignment" feature="name" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.40"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="extends"/>
          <elements xsi:type="xtext:Assignment" feature="extends" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.25"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Keyword" value="{"/>
        <elements xsi:type="xtext:Assignment" cardinality="*" feature="properties" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.17"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="}"/>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="documentation:"/>
          <elements xsi:type="xtext:Assignment" feature="documentation" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.2"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Property">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//Property"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.18"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.19"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Element">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//Element"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="name" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.40"/>
        </elements>
        <elements xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:Group">
            <elements xsi:type="xtext:Keyword" value="->"/>
            <elements xsi:type="xtext:Assignment" feature="typeRef" operator="=">
              <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.21"/>
            </elements>
          </elements>
          <elements xsi:type="xtext:Group">
            <elements xsi:type="xtext:Keyword" value=":"/>
            <elements xsi:type="xtext:Assignment" feature="embeddedTypeDef" operator="=">
              <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.34"/>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="multiplicity" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.20"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Attribute">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//Attribute"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="required" operator="?=">
          <terminal xsi:type="xtext:Keyword" value="required"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="@"/>
        <elements xsi:type="xtext:Assignment" feature="name" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.40"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="->"/>
        <elements xsi:type="xtext:Assignment" feature="typeRef" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.22"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Multiplicity">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//Multiplicity"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="/0/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//Multiplicity"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Keyword" value="["/>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Assignment" feature="lower" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.1"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=".."/>
        </elements>
        <elements xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:Assignment" feature="upper" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.1"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="unbounded" operator="?=">
            <terminal xsi:type="xtext:Keyword" value="*"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Keyword" value="]"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="NamedTypeReference">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//NamedTypeReference"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.24"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.23"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="NonComplexTypeReference">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//NonComplexTypeReference"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.26"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.23"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="BuiltinTypeReference">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//BuiltinTypeReference"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="builtin" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.39"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="TopLevelTypeReference">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//TopLevelTypeReference"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.27"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.30"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="TopLevelComplexTypeReference">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//TopLevelComplexTypeReference"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.29"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.32"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="TopLevelSimpleTypeReference">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//TopLevelSimpleTypeReference"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.28"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.31"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="DirectTopLevelTypeReference">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//DirectTopLevelTypeReference"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="ref" operator="=">
        <terminal xsi:type="xtext:CrossReference">
          <type metamodel="/0/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//TopLevelType"/>
          </type>
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.40"/>
        </terminal>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="DirectTopLevelSimpleTypeReference">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//DirectTopLevelSimpleTypeReference"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="ref" operator="=">
        <terminal xsi:type="xtext:CrossReference">
          <type metamodel="/0/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//TopLevelSimpleType"/>
          </type>
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.40"/>
        </terminal>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="DirectTopLevelComplexTypeReference">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//DirectTopLevelComplexTypeReference"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="ref" operator="=">
        <terminal xsi:type="xtext:CrossReference">
          <type metamodel="/0/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//TopLevelComplexType"/>
          </type>
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.40"/>
        </terminal>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ImportedTopLevelTypeReference">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//ImportedTopLevelTypeReference"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="import" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/0/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//Import"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.40"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Keyword" value=":"/>
        <elements xsi:type="xtext:Assignment" feature="ref" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/0/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//TopLevelType"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.40"/>
          </terminal>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ImportedTopLevelSimpleTypeReference">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//ImportedTopLevelSimpleTypeReference"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="import" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/0/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//Import"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.40"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Keyword" value=":"/>
        <elements xsi:type="xtext:Assignment" feature="ref" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/0/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//TopLevelSimpleType"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.40"/>
          </terminal>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ImportedTopLevelComplexTypeReference">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//ImportedTopLevelComplexTypeReference"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="import" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/0/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//Import"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.40"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Keyword" value=":"/>
        <elements xsi:type="xtext:Assignment" feature="ref" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/0/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//TopLevelComplexType"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.40"/>
          </terminal>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ImportedReference">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//ImportedReference"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.30"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.31"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.32"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="EmbeddedType">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//EmbeddedType"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.35"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.36"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="EmbeddedComplexType">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//EmbeddedComplexType"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="/0/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//EmbeddedComplexType"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Keyword" value="complex-type"/>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="extends"/>
          <elements xsi:type="xtext:Assignment" feature="extends" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.25"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Keyword" value="{"/>
        <elements xsi:type="xtext:Assignment" cardinality="*" feature="properties" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.17"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="}"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="EmbeddedSimpleType">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//EmbeddedSimpleType"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="simple-type"/>
        <elements xsi:type="xtext:Assignment" feature="restriction" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.6"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="documentation" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.15"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ComplexType">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//ComplexType"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.16"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.35"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="SimpleType">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//SimpleType"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.5"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.36"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="BuiltinType">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//BuiltinType"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//BuiltinType/duration"/>
          <literal value="duration"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//BuiltinType/dateTime"/>
          <literal value="dateTime"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//BuiltinType/time"/>
          <literal value="time"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//BuiltinType/date"/>
          <literal value="date"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//BuiltinType/string"/>
          <literal value="string"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//BuiltinType/decimal"/>
          <literal value="decimal"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//BuiltinType/integer"/>
          <literal value="integer"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//BuiltinType/positiveInteger"/>
          <literal value="positiveInteger"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//BuiltinType/nonNegativeInteger"/>
          <literal value="nonNegativeInteger"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//BuiltinType/token"/>
          <literal value="token"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.dslmeinte.nl/xtext/examples/XsdLanguage#//BuiltinType/base64Binary"/>
          <literal value="base64Binary"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="ID">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" cardinality="?" value="^"/>
        <elements xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:CharacterRange">
            <left value="a"/>
            <right value="z"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="A"/>
            <right value="Z"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Alternatives" cardinality="*">
          <elements xsi:type="xtext:CharacterRange">
            <left value="a"/>
            <right value="z"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="A"/>
            <right value="Z"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="_"/>
          <elements xsi:type="xtext:Keyword" value="-"/>
          <elements xsi:type="xtext:CharacterRange">
            <left value="0"/>
            <right value="9"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
  </xtext:Grammar>
  <xtext:Grammar name="org.eclipse.xtext.common.Terminals" definesHiddenTokens="true" hiddenTokens="/1/@rules.5 /1/@rules.3 /1/@rules.4">
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="ecore">
      <ePackage href="http://www.eclipse.org/emf/2002/Ecore#/"/>
    </metamodelDeclarations>
    <rules xsi:type="xtext:TerminalRule" name="ID">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" cardinality="?" value="^"/>
        <elements xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:CharacterRange">
            <left value="a"/>
            <right value="z"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="A"/>
            <right value="Z"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="_"/>
        </elements>
        <elements xsi:type="xtext:Alternatives" cardinality="*">
          <elements xsi:type="xtext:CharacterRange">
            <left value="a"/>
            <right value="z"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="A"/>
            <right value="Z"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="_"/>
          <elements xsi:type="xtext:CharacterRange">
            <left value="0"/>
            <right value="9"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="INT">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </type>
      <alternatives xsi:type="xtext:CharacterRange" cardinality="+">
        <left value="0"/>
        <right value="9"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="STRING">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="&quot;"/>
          <elements xsi:type="xtext:Alternatives" cardinality="*">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Keyword" value="\"/>
              <elements xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="b"/>
                <elements xsi:type="xtext:Keyword" value="t"/>
                <elements xsi:type="xtext:Keyword" value="n"/>
                <elements xsi:type="xtext:Keyword" value="f"/>
                <elements xsi:type="xtext:Keyword" value="r"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
                <elements xsi:type="xtext:Keyword" value="\"/>
              </elements>
            </elements>
            <elements xsi:type="xtext:NegatedToken">
              <terminal xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="\"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
              </terminal>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value="&quot;"/>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="'"/>
          <elements xsi:type="xtext:Alternatives" cardinality="*">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Keyword" value="\"/>
              <elements xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="b"/>
                <elements xsi:type="xtext:Keyword" value="t"/>
                <elements xsi:type="xtext:Keyword" value="n"/>
                <elements xsi:type="xtext:Keyword" value="f"/>
                <elements xsi:type="xtext:Keyword" value="r"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
                <elements xsi:type="xtext:Keyword" value="\"/>
              </elements>
            </elements>
            <elements xsi:type="xtext:NegatedToken">
              <terminal xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="\"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
              </terminal>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value="'"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="ML_COMMENT">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="/*"/>
        <elements xsi:type="xtext:UntilToken">
          <terminal xsi:type="xtext:Keyword" value="*/"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="SL_COMMENT">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="//"/>
        <elements xsi:type="xtext:NegatedToken" cardinality="*">
          <terminal xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:Keyword" value="&#xA;"/>
            <elements xsi:type="xtext:Keyword" value="&#xD;"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" cardinality="?" value="&#xD;"/>
          <elements xsi:type="xtext:Keyword" value="&#xA;"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="WS">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives" cardinality="+">
        <elements xsi:type="xtext:Keyword" value=" "/>
        <elements xsi:type="xtext:Keyword" value="&#x9;"/>
        <elements xsi:type="xtext:Keyword" value="&#xD;"/>
        <elements xsi:type="xtext:Keyword" value="&#xA;"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="ANY_OTHER">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Wildcard"/>
    </rules>
  </xtext:Grammar>
</xmi:XMI>
